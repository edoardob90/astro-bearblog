---
import BlogPostLayout from '@/layouts/BlogPostLayout.astro'
import { getCollection, type CollectionEntry } from 'astro:content'
import getSortedPosts from '@/utils/getSortedPosts'

export interface Props {
    post: CollectionEntry<'blog'>
}

export async function getStaticPaths() {
    // Fetch all posts that are not drafts (except when developing locally)
    const allPosts = await getCollection('blog', ({ data }) => {
        return import.meta.env.PROD ? data.isDraft !== true : true
    })

    return allPosts.map((post) => {
        const [locale, ...slugParts] = post.slug.split('/')
        // console.log(locale, slugParts)
        const postSlug = slugParts.join('/')

        return {
            params: { locale: locale, slug: postSlug },
            props: { post }
        }
    })
}

const { post } = Astro.props
const { Content } = await post.render()

const posts = await getCollection('blog', ({ data }) => {
    return import.meta.env.PROD ? data.isDraft !== true : true
})
const sortedPosts = getSortedPosts(posts, 'asc')
---

<BlogPostLayout post={post} posts={sortedPosts}>
    <Content />
</BlogPostLayout>
