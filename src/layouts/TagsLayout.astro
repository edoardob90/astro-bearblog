---
import Layout from '@/layouts/Layout.astro'
import { type CollectionEntry, getCollection } from 'astro:content'
import { formatDateMD, formatDateYMD, slugifySpace } from '@/utils/format'
import { useTranslations, type Lang } from '@/utils/i18n'
import { getRelativeLocaleUrl } from 'astro:i18n'

const locale = Astro.currentLocale as Lang
const t = useTranslations(locale)

type PostsWithTag = {
    name: string
    posts: CollectionEntry<'blog'>[]
}

const taggedPosts: PostsWithTag[] = []

const allPosts = await getCollection('blog', ({ data }) => {
    return import.meta.env.PROD ? data.isDraft !== true : true
})

const filteredPosts = allPosts.filter((post) => post.data.tags && post.slug.includes(locale))

const uniqueTags = [...new Set(filteredPosts.flatMap((post) => post.data.tags))]

// Group posts by tag
uniqueTags.forEach((tag) => {
    const postsWithTag = filteredPosts
        .filter((post) => post.data.tags.includes(tag))
        .sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime())
    taggedPosts.push({
        name: tag,
        posts: postsWithTag
    })
})
---

<Layout title="tags">
    <main class="mt-8">
        <div class="mt-6 mb-12 pb-4">
            {
                uniqueTags.map((tag) => {
                    return (
                        <a
                            class="mr-1 text-base font-inter panda-link my-1 hover:font-bold"
                            href={'/tags#' + slugifySpace(tag)}
                        >
                            #{t(tag)}
                        </a>
                    )
                })
            }
        </div>

        {
            taggedPosts.map((tag) => (
                <>
                    <h3 id={tag.name}>#{tag.name}</h3>
                    <ul>
                        {tag.posts.map((post) => {
                            return (
                                <li>
                                    <span style={{ flex: '0 0 5rem' }}>
                                        <time>{formatDateYMD(post.data.pubDate.toISOString())}</time>
                                    </span>
                                    <a
                                        rel="prefetch-intent"
                                        href={getRelativeLocaleUrl(locale, post.slug, { prependWith: 'blog' })}
                                        class="panda-link-static"
                                    >
                                        {post.data.title}
                                    </a>
                                </li>
                            )
                        })}
                    </ul>
                </>
            ))
        }
    </main>
</Layout>

<style>
    h3 {
        @apply text-xl mt-8 mb-2 text-[color:rgb(var(--color-text-heading))];
    }
    ul {
        @apply list-none flex flex-wrap;
    }
    ul li {
        @apply inline-block font-inter font-light my-1 transition-all duration-300;
    }
    time {
        @apply mr-2;
    }
</style>
