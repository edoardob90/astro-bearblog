---
import Layout from '@/layouts/Layout.astro'
import { type CollectionEntry, getCollection } from 'astro:content'
import { formatDateYMD, slugifySpace } from '@/utils/format'
import { useTranslations, type Lang, DEFAULT_LOCALE } from '@/utils/i18n'
import getUniqueTags from '@/utils/getUniqueTags'

const locale = Astro.currentLocale as Lang
const t = useTranslations(locale)

type PostsWithTag = {
    name: string
    posts: CollectionEntry<'blog'>[]
}

const taggedPosts: PostsWithTag[] = []

const allPosts = await getCollection('blog', ({ data }) => {
    return data.title && (import.meta.env.PROD ? data.isDraft !== true : true)
})

const filteredPosts = allPosts
    .filter((post) => post.data.tags)
    .filter((post) => {
        if (locale !== undefined) {
            return post.data.langs.includes(locale) && post.slug.startsWith(locale)
        } else {
            return post.slug.startsWith(DEFAULT_LOCALE)
        }
    })

const uniqueTags = getUniqueTags(filteredPosts)

// Group posts by tag
uniqueTags.forEach((tag) => {
    const postsWithTag = filteredPosts
        .filter((post) => post.data.tags.includes(tag))
        .sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime())
    taggedPosts.push({
        name: tag,
        posts: postsWithTag
    })
})

// Sort tags by the how many posts they have
taggedPosts.sort((a, b) => b.posts.length - a.posts.length)
---

<Layout title="tags">
    <main class="mt-8">
        <div class="mt-6 mb-12 pb-4">
            {
                uniqueTags.map((tag) => {
                    return (
                        <a
                            class="mr-1 text-base font-inter panda-link my-1 hover:font-bold"
                            href={`/${locale}/blog/tags#${slugifySpace(tag)}`}
                        >
                            #{t(tag)}
                        </a>
                    )
                })
            }
        </div>

        {
            taggedPosts.map((tag) => (
                <>
                    <h3 id={tag.name}>#{tag.name}</h3>
                    <ul>
                        {tag.posts.map((post) => {
                            const [_, ...slug] = post.slug.split('/')
                            return (
                                <li>
                                    <span style={{ flex: '0 0 5rem' }}>
                                        <time>{formatDateYMD(post.data.pubDate.toISOString())}</time>
                                    </span>
                                    <a rel="prefetch-intent" href={`/${locale}/blog/${slug}`} class="panda-link-static">
                                        {post.data.title}
                                    </a>
                                </li>
                            )
                        })}
                    </ul>
                </>
            ))
        }
    </main>
</Layout>

<style>
    h3 {
        @apply text-xl mt-8 mb-2 text-[color:rgb(var(--color-text-heading))];
    }
    ul {
        @apply list-none flex flex-wrap flex-col;
    }
    ul li {
        @apply inline-block font-inter font-light my-1 transition-all duration-300;
    }
    li span {
        @apply text-[0.9em];
    }
    time {
        @apply mr-2;
    }
</style>
